user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 768;
        # multi_accept on;
}

http {

    access_log        /var/log/nginx/access.log;
    error_log         /var/log/nginx/error.log;
    proxy_cache_path  /var/cache/nginx levels=1:2 keys_zone=one:8m max_size=3000m inactive=600m;
    proxy_temp_path   /var/tmp;
    include           mime.types;
    default_type      application/octet-stream;
    sendfile          on;

    gzip on;
    gzip_comp_level 6;
    gzip_vary on;
    gzip_min_length  1000;
    gzip_proxied any;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_buffers 16 8k;
  ##
  ## HARDENING
  ## https://www.cyberciti.biz/tips/linux-unix-bsd-nginx-webserver-security.html
  ##
  ## Start: Size Limits & Buffer Overflows ##
    client_body_buffer_size  8K;
    client_header_buffer_size 2k;
    client_max_body_size 5M;
    large_client_header_buffers 4 32k;
  ## END: Size Limits & Buffer Overflows ##
  ## Start: Timeouts ##
    client_body_timeout   10;
    client_header_timeout 10;
    keepalive_timeout     55;
    send_timeout          10;
  ## End: Timeouts ##
  
  ### Control maximum number of simultaneous connections for one session i.e. ###
  ### restricts the amount of connections from a single ip address ###
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;


    upstream fitness_center_upstream {
      server 127.0.0.1:8300;
      keepalive 64;
    }

## Below aa new server block (to perform an HTTPS redirect) like so:
   ## Note: to display any NGINX errors; try this:  
   ##          sudo tail -f /var/log/nginx/error.log 
   ##          sudo grep -r listen /etc/nginx/*
   ##
    server {
        listen 80;
        listen [::]:80 ipv6only=on default_server;

        server_name fitness.philab.cdc.gov www.fitness.philab.cdc.gov;
        return 302 https://$server_name$request_uri;   ##  http://127.0.0.1:8300;

        location / {
         try_files $uri $uri/ =404;
        }
      }

      }


    server {
        listen 443 ssl;
        listen [::]:443 ssl ipv6only=on default_server;

        include /etc/nginx/snippets/self-signed.conf;
        ## Security server hardening 
        include /etc/nginx/snippets/ssl-params.conf;

        server_name fitness.philab.cdc.gov www.fitness.philab.cdc.gov;

        ## Only requests to our Host are allowed i.e. fitness.philab.cdc.gov images.fitness.philab.cdc.gov and www.fitness.philab.cdc.gov
        if ($host !~ ^(fitness.philab.cdc.gov|www.fitness.philab.cdc.gov|images.fitness.philab.cdc.gov)$ ) {
          return 444;
        }
        ##
        ## Only allow these request methods ##
        ## Do not accept DELETE, SEARCH and other methods ##
        if ($request_method !~ ^(GET|HEAD|POST)$ ) {
            return 444;
        }
        ## Block some robots ##
        if ($http_user_agent ~* msnbot|scrapbot) {
                return 403;
        }


        location / {
           ## Ok, proxy to the Express/NodeJS server @ 8300
                proxy_cache one;
                proxy_cache_key sfs$request_uri$scheme;
                proxy_pass  http://127.0.0.1:8300;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $http_host;

                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto https;
                proxy_set_header X-Nginx-Proxy true;

                proxy_redirect off;
          }

        # location ~ ^/(images/|img/|javascript/|js/|css/|stylesheets/|flash/|media/|static/|robots.txt|humans.txt|favicon.ico) {
        #   root /opt/FitnessCenterSrv;
        #   access_log off;
        #   expires max;
        #  }

     }


